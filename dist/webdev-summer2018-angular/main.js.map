{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/course-grid/course-grid.component.css","webpack:///./src/app/course-grid/course-grid.component.html","webpack:///./src/app/course-grid/course-grid.component.ts","webpack:///./src/app/course-navigator/course-navigator.component.css","webpack:///./src/app/course-navigator/course-navigator.component.html","webpack:///./src/app/course-navigator/course-navigator.component.ts","webpack:///./src/app/course-viewer/course-viewer.component.css","webpack:///./src/app/course-viewer/course-viewer.component.html","webpack:///./src/app/course-viewer/course-viewer.component.ts","webpack:///./src/app/enroll-list/enroll-list.component.css","webpack:///./src/app/enroll-list/enroll-list.component.html","webpack:///./src/app/enroll-list/enroll-list.component.ts","webpack:///./src/app/enroll/enroll.component.css","webpack:///./src/app/enroll/enroll.component.html","webpack:///./src/app/enroll/enroll.component.ts","webpack:///./src/app/filter.pipe.ts","webpack:///./src/app/hello-world/hello-world.component.css","webpack:///./src/app/hello-world/hello-world.component.html","webpack:///./src/app/hello-world/hello-world.component.ts","webpack:///./src/app/lesson-tabs/lesson-tabs.component.css","webpack:///./src/app/lesson-tabs/lesson-tabs.component.html","webpack:///./src/app/lesson-tabs/lesson-tabs.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/course.module.client.ts","webpack:///./src/app/models/user.model.client.ts","webpack:///./src/app/module-list/module-list.component.css","webpack:///./src/app/module-list/module-list.component.html","webpack:///./src/app/module-list/module-list.component.ts","webpack:///./src/app/noSanitize.pipe.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/quiz-answers/quiz-answers.component.css","webpack:///./src/app/quiz-answers/quiz-answers.component.html","webpack:///./src/app/quiz-answers/quiz-answers.component.ts","webpack:///./src/app/quiz-list/quiz-list.component.css","webpack:///./src/app/quiz-list/quiz-list.component.html","webpack:///./src/app/quiz-list/quiz-list.component.ts","webpack:///./src/app/quiz-submissions/quiz-submissions.component.css","webpack:///./src/app/quiz-submissions/quiz-submissions.component.html","webpack:///./src/app/quiz-submissions/quiz-submissions.component.ts","webpack:///./src/app/quiz-taker/quiz-taker.component.css","webpack:///./src/app/quiz-taker/quiz-taker.component.html","webpack:///./src/app/quiz-taker/quiz-taker.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/section-list/section-list.component.css","webpack:///./src/app/section-list/section-list.component.html","webpack:///./src/app/section-list/section-list.component.ts","webpack:///./src/app/services/course-navigator.service.client.ts","webpack:///./src/app/services/course.service.client.ts","webpack:///./src/app/services/lesson.service.client.ts","webpack:///./src/app/services/module.service.client.ts","webpack:///./src/app/services/quiz.service.client.ts","webpack:///./src/app/services/section.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/app/services/widget.service.client.ts","webpack:///./src/app/update-section-list/update-section-list.component.css","webpack:///./src/app/update-section-list/update-section-list.component.html","webpack:///./src/app/update-section-list/update-section-list.component.ts","webpack:///./src/app/white-board/white-board.component.css","webpack:///./src/app/white-board/white-board.component.html","webpack:///./src/app/white-board/white-board.component.ts","webpack:///./src/app/widget-list/widget-list.component.css","webpack:///./src/app/widget-list/widget-list.component.html","webpack:///./src/app/widget-list/widget-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HelloWorldComponent } from './hello-world/hello-world.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {CourseNavigatorServiceClient} from \"./services/course-navigator.service.client\";\nimport { CourseNavigatorComponent } from './course-navigator/course-navigator.component';\nimport { WhiteBoardComponent } from './white-board/white-board.component';\nimport { CourseGridComponent } from './course-grid/course-grid.component';\nimport {CourseServiceClient} from \"./services/course.service.client\";\nimport {routing} from \"./app.routing\";\nimport { CourseViewerComponent } from './course-viewer/course-viewer.component';\nimport { ModuleListComponent } from './module-list/module-list.component';\nimport {ModuleServiceClient} from \"./services/module.service.client\";\nimport { LessonTabsComponent } from './lesson-tabs/lesson-tabs.component';\nimport {LessonServiceClient} from \"./services/lesson.service.client\";\nimport { WidgetListComponent } from './widget-list/widget-list.component';\nimport {WidgetServiceClient} from \"./services/widget.service.client\";\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport {UserServiceClient} from \"./services/user.service.client\";\nimport { SectionListComponent } from './section-list/section-list.component';\nimport {SectionServiceClient} from \"./services/section.service.client\";\nimport { EnrollComponent } from './enroll/enroll.component';\nimport { UpdateSectionListComponent } from './update-section-list/update-section-list.component';\nimport { EnrollListComponent } from './enroll-list/enroll-list.component';\nimport { QuizListComponent } from './quiz-list/quiz-list.component';\nimport { QuizSubmissionsComponent } from './quiz-submissions/quiz-submissions.component';\nimport { QuizAnswersComponent } from './quiz-answers/quiz-answers.component';\nimport {QuizServiceClient} from \"./services/quiz.service.client\";\nimport { QuizTakerComponent } from './quiz-taker/quiz-taker.component';\nimport {FilterPipe} from \"./filter.pipe\";\nimport {NoSanitizePipe} from \"./noSanitize.pipe\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HelloWorldComponent,\n    CourseNavigatorComponent,\n    WhiteBoardComponent,\n    CourseGridComponent,\n    CourseViewerComponent,\n    ModuleListComponent,\n    LessonTabsComponent,\n    WidgetListComponent,\n    LoginComponent,\n    RegisterComponent,\n    ProfileComponent,\n    SectionListComponent,\n    EnrollComponent,\n    UpdateSectionListComponent,\n    EnrollListComponent,\n    QuizListComponent,\n    QuizSubmissionsComponent,\n    QuizAnswersComponent,\n    QuizTakerComponent,\n    FilterPipe,\n    NoSanitizePipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    routing\n  ],\n  providers: [\n    CourseNavigatorServiceClient,\n    CourseServiceClient,\n    ModuleServiceClient,\n    LessonServiceClient,\n    WidgetServiceClient,\n    UserServiceClient,\n    SectionServiceClient,\n    QuizServiceClient\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from \"@angular/router\";\r\nimport {WhiteBoardComponent} from \"./white-board/white-board.component\";\r\nimport {CourseViewerComponent} from \"./course-viewer/course-viewer.component\";\r\nimport {LoginComponent} from \"./login/login.component\";\r\nimport {RegisterComponent} from \"./register/register.component\";\r\nimport {ProfileComponent} from \"./profile/profile.component\";\r\nimport {EnrollComponent} from \"./enroll/enroll.component\";\r\nimport {CourseNavigatorComponent} from \"./course-navigator/course-navigator.component\";\r\nimport {QuizListComponent} from \"./quiz-list/quiz-list.component\";\r\nimport {QuizSubmissionsComponent} from \"./quiz-submissions/quiz-submissions.component\";\r\nimport {QuizTakerComponent} from \"./quiz-taker/quiz-taker.component\";\r\nimport {QuizAnswersComponent} from \"./quiz-answers/quiz-answers.component\";\r\n\r\nconst appRoutes:Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  { path: 'home', component: WhiteBoardComponent},\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'quizzes', component: QuizListComponent},\r\n  { path: 'quiz/:quizId', component: QuizTakerComponent},\r\n  { path: 'quiz/:quizId/submissions', component: QuizSubmissionsComponent},\r\n  { path: 'quiz/:quizId/submission/:submissionId', component: QuizAnswersComponent},\r\n  { path: 'admin', component: CourseNavigatorComponent},\r\n  { path: 'admin/course/:courseId', component: CourseNavigatorComponent},\r\n  { path: 'admin/course/:courseId/add', component: CourseNavigatorComponent},\r\n  { path: 'admin/course/:courseId/section/:sectionId', component: CourseNavigatorComponent },\r\n  { path: 'course/:courseId/enroll', component: EnrollComponent},\r\n  { path: 'course/:courseId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId', component: CourseViewerComponent },\r\n  { path: 'course/:courseId/module/:moduleId/lesson/:lessonId', component: CourseViewerComponent },\r\n  { path: '**', component: WhiteBoardComponent} // last\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","module.exports = \".card {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\"","module.exports = \"<h2>Course Grid ({{courses.length}})</h2>\\n\\n<div class=\\\"row\\\">\\n  <div *ngFor=\\\"let course of courses\\\" class=\\\"col-sm-3\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{course.title}}</h5>\\n        <p class=\\\"card-text\\\">With supporting text below as a natural lead-in to additional content.</p>\\n        <a routerLink=\\\"/course/{{course.id}}\\\"\\n           class=\\\"btn btn-primary\\\">View Course</a>\\n        <a routerLink=\\\"/course/{{course.id}}/enroll\\\"\\n           class=\\\"btn btn-primary ml-2\\\">Enroll</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/course.module.client\";\n\n@Component({\n  selector: 'app-course-grid',\n  templateUrl: './course-grid.component.html',\n  styleUrls: ['./course-grid.component.css']\n})\nexport class CourseGridComponent implements OnInit {\n\n  constructor(private courseService:CourseServiceClient) { }\n\n  courses: Course[] = [];\n\n  ngOnInit() {\n    this.courseService.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Course Navigator ({{courses.length}})</h1>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Courses</li>\\n        <li *ngFor=\\\"let course of courses\\\"\\n            (click)=\\\"findSectionsForCourse(course.id)\\\"\\n            class=\\\"list-group-item\\\">\\n          {{course.title}}\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-3\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Sections</li>\\n        <li *ngFor=\\\"let section of sections\\\"\\n            class=\\\"list-group-item\\\">\\n          <a routerLink=\\\"/admin/course/{{courseId}}/section/{{section._id}}\\\">{{section.name}}</a>\\n          <span class=\\\"pull-right\\\"><i class=\\\"fa fa-trash\\\" (click)=\\\"removeSection(section._id)\\\"></i></span>\\n        </li>\\n        <li class=\\\"list-group-item\\\">\\n          <i class=\\\"fa fa-plus\\\" (click)=\\\"addSection(courseId)\\\"></i>\\n        </li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-6\\\" [hidden]=\\\"!updateSection\\\">\\n      <app-update-section-list></app-update-section-list>\\n    </div>\\n    <div class=\\\"col-6\\\" [hidden]=\\\"updateSection\\\">\\n      <app-section-list></app-section-list>\\n    </div>\\n  </div>\\n\\n  <a routerLink=\\\"/home\\\">Home</a>\\n  <a routerLink=\\\"/profile\\\" class=\\\"ml-2\\\">Profile</a>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {CourseNavigatorServiceClient} from \"../services/course-navigator.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-course-navigator',\n  templateUrl: './course-navigator.component.html',\n  styleUrls: ['./course-navigator.component.css']\n})\nexport class CourseNavigatorComponent implements OnInit {\n\n  constructor(private service:CourseNavigatorServiceClient,\n              private route:ActivatedRoute,\n              private router:Router) {\n    this.route.params.subscribe( params => this.setParams(params));\n  }\n  courses = [];\n  modules = [];\n  sections = [];\n  courseId;\n  sectionId;\n  updateSection;\n\n\n  ngOnInit() {\n    this.service.findAllCourses()\n      .then(courses => this.courses = courses);\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.sectionId = params['sectionId'];\n\n    if (this.courseId) {\n      this.findSectionsForCourse(this.courseId);\n    }\n\n    if (this.sectionId) {\n      console.log(this.sectionId);\n      this.updateSection = true;\n    }\n\n  }\n\n  selectCourse(courseId) {\n    this.courseId = courseId;\n    this.service.findAllModulesForCourses(courseId)\n      .then(modules =>this.modules = modules);\n  }\n\n  findSectionsForCourse(courseId) {\n    this.service.findAllSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n    if (this.router.url === '/admin') {\n      this.router.navigateByUrl('/admin/course/' + courseId);\n    }\n  }\n\n  removeSection(sectionId) {\n    this.service.removeSection(sectionId)\n      .then(() => {\n        this.findSectionsForCourse(this.courseId);\n      })\n  }\n\n  addSection(courseId) {\n    var section = {name: courseId, courseId: courseId};\n    console.log(section);\n    this.updateSection = false;\n    this.router.navigateByUrl('admin/course/'+courseId+'/add')\n/*    this.service.addSection(courseId, section)\n      .then(() => this.findSectionsForCourse(courseId));*/\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{course.title}} Course Information</h2>\\n  <app-module-list></app-module-list>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CourseServiceClient} from \"../services/course.service.client\";\nimport {Course} from \"../models/course.module.client\";\n\n@Component({\n  selector: 'app-course-viewer',\n  templateUrl: './course-viewer.component.html',\n  styleUrls: ['./course-viewer.component.css']\n})\nexport class CourseViewerComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute, private courseService:CourseServiceClient) {\n    this.route.params.subscribe(params => this.loadCourse(params['courseId']));\n  }\n\n  course:Course = new Course();\n\n  ngOnInit() {\n  }\n\n  loadCourse(courseId) {\n    this.courseService.findCourseById(courseId)\n      .then(course => this.course = course);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"mt-4 mb-4\\\">\\n  <h2>Enrolled Sections ({{sections.length}})</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let enrollment of sections\\\" class=\\\"list-group-item\\\">\\n      {{enrollment.section.name}}\\n      ({{enrollment.section.seats}})\\n    </li>\\n  </ul>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SectionServiceClient} from \"../services/section.service.client\";\n\n@Component({\n  selector: 'app-enroll-list',\n  templateUrl: './enroll-list.component.html',\n  styleUrls: ['./enroll-list.component.css']\n})\nexport class EnrollListComponent implements OnInit {\n\n  sections = [];\n\n  constructor(private sectionService: SectionServiceClient,) { }\n\n  ngOnInit() {\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => {\n        console.log(sections);\n        this.sections = sections\n      } );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Enroll in Course {{courseId}}</h1>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let section of sections\\\" class=\\\"list-group-item\\\">\\n      {{section.name}} {{section.seats}}\\n      <button (click)=\\\"enroll(section)\\\"\\n              class=\\\"float-right btn btn-primary\\\">Enroll</button>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-enroll',\n  templateUrl: './enroll.component.html',\n  styleUrls: ['./enroll.component.css']\n})\nexport class EnrollComponent implements OnInit {\n\n  courseId;\n  sections = [];\n\n  constructor(private service: SectionServiceClient,\n              private route:ActivatedRoute,\n              private router:Router) {\n\n    this.route.params.subscribe(params => this.setParams(params));\n  }\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.loadSections(this.courseId);\n  }\n\n  enroll(section) {\n    if (section.seats == 0) {\n      alert('You can not enroll because the section is at full capacity.');\n    } else {\n      this.service\n        .enrollStudentInSection(section._id)\n        .then(() => {\n          this.router.navigate(['profile']);\n        });\n    }\n  }\n\n  loadSections(courseId) {\n    this.courseId = courseId;\n    this\n      .service\n      .findSectionsForCourse(courseId)\n      .then(sections => this.sections = sections);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(items: any[], searchText: string): any[] {\r\n    if(!items) return [];\r\n    if(!searchText) return items;\r\n    searchText = searchText.toLowerCase();\r\n    return items.filter( it => {\r\n      return it.username.toString().toLowerCase().includes(searchText);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>{{message}}</h1>\\n\\n<h2>Courses ({{courses.length}})</h2>\\n\\n<ul>\\n  <li *ngFor=\\\"let course of courses\\\" class=\\\"list-item\\\" style=\\\"\\\">{{course.title}}\\n    <button (click)=\\\"deleteCourse(course.id)\\\" class=\\\"btn btn-danger\\\">\\n      Delete\\n    </button>\\n  </li>\\n</ul>\\n<!--<input [(ngModel)]=\\\"courseTitle\\\"/>-->\\n<button\\n  class=\\\"btn btn-success\\\"\\n  (click)=\\\"addCourse(courseTitle)\\\">\\n  Add Course\\n</button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hello-world',\n  templateUrl: './hello-world.component.html',\n  styleUrls: ['./hello-world.component.css']\n})\nexport class HelloWorldComponent implements OnInit {\n\n  courseTitle;\n  message = 'Hello from Hello World Component!';\n  courses = [\n    {title: 'CS5200', id: 123},\n    {title: 'CS5610', id: 234},\n    {title: 'CS3200', id: 345},\n    {title: 'CS4550', id: 456}\n  ];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  deleteCourse(courseId) {\n    this.courses =\n      this.courses\n        .filter(course =>\n          course.id !== courseId);\n  }\n\n  addCourse(title) {\n    const largestId = Math.max.apply(\n      Math, this.courses.map(\n        function(course){\n          return course.id; }))\n    this.courses.push(\n      {title: title, id: largestId + 1}\n    );}\n\n}\n","module.exports = \"\"","module.exports = \"<ul class=\\\"nav nav-tabs\\\" *ngIf=\\\"this.moduleId\\\">\\n  <li *ngFor=\\\"let lesson of lessons\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link active\\\"\\n       [ngClass]=\\\"{'active': lesson.id === lessonId}\\\"\\n       routerLink=\\\"/course/{{courseId}}/module/{{moduleId}}/lesson/{{lesson.id}}\\\">\\n      {{lesson.title}}\\n    </a>\\n  </li>\\n\\n</ul>\\n<div class=\\\"mt-2 mb-2\\\">\\n  <button class=\\\"btn btn-info\\\" (click)=\\\"getQuizzesForLesson()\\\">View Quizzes for {{lessonId}}</button><br/>\\n</div>\\n<app-widget-list></app-widget-list>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {LessonServiceClient} from \"../services/lesson.service.client\";\n\n@Component({\n  selector: 'app-lesson-tabs',\n  templateUrl: './lesson-tabs.component.html',\n  styleUrls: ['./lesson-tabs.component.css']\n})\nexport class LessonTabsComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute,\n              private lessonService:LessonServiceClient,\n              private router:Router) {\n    this.route.params.subscribe( params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  lessonId;\n  lessons = [];\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.lessonId = params['lessonId'];\n    this.loadLessons(this.moduleId);\n  }\n\n  loadLessons(moduleId) {\n    this.moduleId = moduleId;\n    if (this.moduleId) {\n      this.lessonService.findLessonsForModule(moduleId)\n        .then(lessons => this.lessons = lessons);\n    }\n  }\n\n  getQuizzesForLesson() {\n    this.router.navigate(['/quizzes', {lessonId: this.lessonId}]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Login</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control mb-2 mt-4\\\"/>\\n  <input [(ngModel)]=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control mb-2\\\"/>\\n  <small id=\\\"loginError\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.loginError\\\">\\n    Login was unsuccessful. Please try again.\\n  </small>\\n  <button (click)=\\\"login(username, password)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Login\\n  </button>\\n\\n  <a routerLink=\\\"/register\\\">Register</a>\\n  <a routerLink=\\\"/home\\\" class=\\\"ml-2\\\">Home</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Route, Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username;\n  password;\n  loginError:boolean = false;\n\n  login(username, password) {\n    console.log([username, password]);\n    this.service\n      .login(username, password)\n      .then((response) => {\n        if (response && response.error) {\n          this.loginError = true;\n        } else {\n          this.loginError = false;\n          this.router.navigate(['profile']);\n        }\n      });\n  }\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  ngOnInit() {\n  }\n\n}\n","export class Course {\r\n  id:number;\r\n  title:string;\r\n}\r\n","export class User {\r\n  username: string;\r\n  password: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n}\r\n","module.exports = \".active.wbdv {\\r\\n  background-color: red;\\r\\n  border-color: red;\\r\\n}\\r\\n\\r\\n.active.wbdv a {\\r\\n  color: white;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-4\\\">\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item active\\\">Modules</li>\\n      <li [ngClass]=\\\"{'active': module.id == moduleId}\\\" *ngFor=\\\"let module of modules\\\"\\n          class=\\\"list-group-item wbdv\\\">\\n        <a routerLink=\\\"/course/{{courseId}}/module/{{module.id}}\\\">\\n          {{module.title}}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"col-8\\\">\\n    <app-lesson-tabs></app-lesson-tabs>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ModuleServiceClient} from \"../services/module.service.client\";\n\n@Component({\n  selector: 'app-module-list',\n  templateUrl: './module-list.component.html',\n  styleUrls: ['./module-list.component.css']\n})\nexport class ModuleListComponent implements OnInit {\n\n  constructor(private route:ActivatedRoute,\n              private moduleService:ModuleServiceClient) {\n    this.route.params.subscribe(params => this.setParams(params));\n  }\n\n  courseId;\n  moduleId;\n  modules = []; //type for assignment\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.courseId = params['courseId'];\n    this.moduleId = params['moduleId'];\n    this.loadModules(this.courseId);\n  }\n\n  loadModules(courseId) {\n    this.courseId = courseId;\n    this.moduleService.findModulesForCourse(courseId)\n      .then(modules => this.modules = modules);\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'noSanitize' })\r\nexport class NoSanitizePipe implements PipeTransform {\r\n  constructor(private domSanitizer: DomSanitizer) {\r\n\r\n  }\r\n  transform(html: string): SafeHtml {\r\n    return this.domSanitizer.bypassSecurityTrustHtml(html);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Profile</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\"\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"firstName\\\"\\n         placeholder=\\\"first name\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"lastName\\\"\\n         placeholder=\\\"lastName\\\"\\n         class=\\\"form-control\\\"/>\\n  <input [(ngModel)]=\\\"email\\\"\\n         placeholder=\\\"email\\\"\\n         class=\\\"form-control\\\"/>\\n  <button (click)=\\\"update()\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Update\\n  </button>\\n\\n  <app-enroll-list></app-enroll-list>\\n  <a (click)=\\\"logout()\\\">Logout</a>\\n  <a routerLink=\\\"/home\\\" class=\\\"ml-2\\\">Home</a>\\n  <a routerLink=\\\"/admin\\\" class=\\\"ml-2\\\" [hidden]=\\\"!this.isAdmin\\\">Admin</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserServiceClient} from \"../services/user.service.client\";\nimport {Router} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\nimport {User} from \"../models/user.model.client\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private service: UserServiceClient,\n              private sectionService: SectionServiceClient,\n              private router: Router) { }\n\n  user:User = new User();\n  username;\n  password;\n  email;\n  firstName;\n  lastName;\n  sections = [];\n  isAdmin:boolean = false;\n\n  update() {\n    this.user.username = this.username;\n    this.user.password = this.password;\n    this.user.email = this.email;\n    this.user.firstName = this.firstName;\n    this.user.lastName = this.lastName;\n    this.service.updateUser(this.user)\n      .then(user => {\n        this.user = user;\n        this.router.navigateByUrl('/profile');\n      });\n  }\n\n  logout() {\n    this.service\n      .logout()\n      .then(() =>\n        this.router.navigate(['login']));\n\n  }\n\n  ngOnInit() {\n    this.service\n      .profile()\n      .then(user => {\n          this.username = user.username;\n          this.email  = user.email;\n          this.firstName = user.firstName;\n          this.lastName = user.lastName;\n          if (user.isAdmin) this.isAdmin = user.isAdmin;\n      });\n\n    this.sectionService\n      .findSectionsForStudent()\n      .then(sections => {\n        console.log(sections);\n        this.sections = sections\n      } );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>{{quiz.username}}'s Submission</h2>\\n  <ul class=\\\"list-group\\\">\\n    <li *ngFor=\\\"let question of questions\\\" class=\\\"list-group-item mb-2\\\">\\n      <h4>{{question.title}} - {{question.points}}</h4>\\n      {{quiz.answers[question.id]}}\\n    </li>\\n  </ul>\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"backToSubmissions()\\\">Go Back</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-quiz-answers',\n  templateUrl: './quiz-answers.component.html',\n  styleUrls: ['./quiz-answers.component.css']\n})\nexport class QuizAnswersComponent implements OnInit {\n\n  quizId = '';\n  submissionId = '';\n  quiz = {};\n  questions = [];\n\n  constructor(private service: QuizServiceClient,\n              private activatedRoute:ActivatedRoute,\n              private router:Router) {\n    this.activatedRoute\n      .params\n      .subscribe(params => this.setParams(params));\n  }\n\n  ngOnInit() {\n  }\n\n  setParams(params) {\n    this.quizId = params['quizId'];\n    this.submissionId = params['submissionId'];\n    if (this.quizId && this.submissionId) {\n      this.service.findQuizAnswers(this.quizId, this.submissionId)\n        .then(quiz => {\n          this.quiz = quiz;\n          console.log(this.quiz);\n        });\n\n      this.service.findAllQuestionsForQuiz(this.quizId)\n        .then(questions => this.questions = questions);\n    }\n  }\n\n  backToSubmissions() {\n      this.router.navigateByUrl('/quiz/' + this.quizId + '/submissions');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Quizzes</h2>\\n\\n  <ul class=\\\"list-group\\\" *ngIf=\\\"quizzes.length > 0\\\">\\n    <li *ngFor=\\\"let quiz of quizzes\\\" class=\\\"list-group-item\\\">\\n      {{quiz.name}}\\n\\n      <a routerLink=\\\"/quiz/{{quiz.id}}/submissions\\\" class=\\\"btn btn-info float-right ml-2\\\">Submissions</a>\\n      <a routerLink=\\\"/quiz/{{quiz.id}}\\\" class=\\\"btn btn-success float-right\\\">Take</a>\\n    </li>\\n  </ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-quiz-list',\n  templateUrl: './quiz-list.component.html',\n  styleUrls: ['./quiz-list.component.css']\n})\nexport class QuizListComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient,\n              private route:ActivatedRoute,\n              private router:Router) {\n    this.route.params.subscribe(params => this.setParams(params));\n  }\n\n  quizzes = [];\n  lessonId;\n  ngOnInit() {\n\n    this.service.findAllQuizzesForLesson(this.lessonId)\n      .then(quizzes => this.quizzes = quizzes);\n    this.router.navigateByUrl('/quizzes');\n    console.log(this.quizzes);\n  }\n\n  setParams(params) {\n    this.lessonId = params['lessonId'];\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h2>Submissions</h2>\\n\\n  <label class=\\\"font-weight-bold mr-2 mb-4\\\">Search by username</label><input [(ngModel)]=\\\"searchText\\\" placeholder=\\\"enter username here\\\">\\n\\n  <table class=\\\"table table-bordered table-striped\\\"  *ngIf=\\\"submissions.length > 0; else noSubmissions\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">Username</th>\\n      <th scope=\\\"col\\\">Time Submitted</th>\\n      <th scope=\\\"col\\\">View Submission</th>\\n    </tr>\\n    <tr *ngFor=\\\"let submission of submissions | filter : searchText\\\">\\n      <td>\\n        {{submission.username}}\\n      </td>\\n      <td>\\n        {{submission.timeSubmitted | date:'medium'}}\\n      </td>\\n      <td>\\n        <button (click)=\\\"viewQuizAnswers(submission._id)\\\" class=\\\"btn btn-info\\\">View</button>\\n      </td>\\n    </tr>\\n  </table>\\n  <a routerLink=\\\"/\\\">Home</a>\\n  <ng-template #noSubmissions>\\n    <div>\\n      There have been no submissions for this quiz yet.\\n    </div>\\n  </ng-template>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\n\n@Component({\n  selector: 'app-quiz-submissions',\n  templateUrl: './quiz-submissions.component.html',\n  styleUrls: ['./quiz-submissions.component.css']\n})\nexport class QuizSubmissionsComponent implements OnInit {\n\n  constructor(private service: QuizServiceClient,\n              private aRoute: ActivatedRoute,\n              private router:Router) {\n    this.aRoute.params.subscribe(params =>\n      this.loadSubmissions(params['quizId']));\n  }\n\n  quizId = '';\n  submissions = [];\n  loadSubmissions(quizId) {\n    this.quizId = quizId;\n    this.service.loadSubmissions(this.quizId)\n      .then(submissions => this.submissions = submissions);\n  }\n\n  ngOnInit() {\n  }\n\n  viewQuizAnswers(submissionId) {\n    this.router.navigateByUrl('/quiz/' + this.quizId + '/submission/' + submissionId);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h2>{{quiz.name}}</h2>\\r\\n  <ul class=\\\"list-group\\\">\\r\\n    <li *ngFor=\\\"let question of questions\\\" class=\\\"list-group-item mb-2\\\">\\r\\n      <div [ngSwitch]=\\\"determineQuestionType(question)\\\">\\r\\n        <div *ngSwitchCase=\\\"'essay'\\\">\\r\\n          <h3>{{question.title}}</h3>\\r\\n          <p>{{question.description}}</p>\\r\\n          <textarea [(ngModel)]='submission[question.id]' class=\\\"form-control\\\" rows=\\\"4\\\" cols=\\\"50\\\"></textarea>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"'trueFalse'\\\">\\r\\n          <h3>{{question.title}}</h3>\\r\\n          <p>{{question.description}}</p>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"radio\\\" *ngFor=\\\"let item of trueFalse\\\">\\r\\n              <label>\\r\\n                <input type=\\\"radio\\\" name=\\\"tfQuestion\\\" value=\\\"{{item}}\\\" [(ngModel)]='submission[question.id]'>\\r\\n                {{item}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"'multipleChoice'\\\">\\r\\n          <h3>{{question.title}}</h3>\\r\\n          <p>{{question.description}}</p>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"radio\\\" *ngFor=\\\"let item of question.options.split('\\\\n')\\\">\\r\\n              <label>\\r\\n                <input type=\\\"radio\\\" name=\\\"mcQuestion\\\" value=\\\"{{item}}\\\" [(ngModel)]='submission[question.id]'>\\r\\n                {{item}}\\r\\n              </label>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngSwitchCase=\\\"'fillInBlanks'\\\">\\r\\n          <h3>{{question.title}}</h3>\\r\\n          <div [innerHtml]=\\\"determineBlanksQuestion(question) | noSanitize\\\"></div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <button class=\\\"btn btn-danger\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n  <button class=\\\"btn btn-success ml-2\\\" (click)=\\\"submit(submission)\\\">Submit</button>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Route, Router} from \"@angular/router\";\nimport {QuizServiceClient} from \"../services/quiz.service.client\";\nimport {DomSanitizer, SafeHtml} from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'app-quiz-taker',\n  templateUrl: './quiz-taker.component.html',\n  styleUrls: ['./quiz-taker.component.css']\n})\nexport class QuizTakerComponent implements OnInit {\n\n  quizId = '';\n  quiz = {};\n  submission = {};\n  questions = []; //TODO: make this attach to the quiz object by creating a model\n  trueFalse = [\n    \"True\",\n    \"False\"\n  ]\n\n  constructor(private service: QuizServiceClient,\n              private activatedRoute: ActivatedRoute,\n              private router:Router) {\n    this.activatedRoute\n      .params\n      .subscribe(params => this.loadQuiz(params['quizId']));\n\n    if (this.quizId && this.quizId !== null) {\n      this.service.findAllQuestionsForQuiz(this.quizId)\n        .then(questions => this.questions = questions);\n    }\n  }\n\n\n  loadQuiz(quizId) {\n    this.quizId = quizId;\n    this.service\n      .findQuizById(quizId)\n      .then(quiz => this.quiz = quiz);\n  }\n  submit(submission) {\n    alert('Once submitted, your answers can not be changed. Are you sure you wish to submit?');\n    this.service\n      .submitQuiz(this.submission, this.quizId)\n      .then(quiz => {\n        if (quiz._id) {\n          alert('Your quiz has been submitted');\n          this.router.navigateByUrl('/');\n        } else {\n          alert('There was an error submitting your quiz. Please try again');\n        }\n      });\n  }\n\n  cancel() {\n    alert('Your answers will not be saved. Are you sure you wish to exit?');\n    this.router.navigateByUrl('/');\n  }\n\n\n  ngOnInit() {\n  }\n\n\n  determineQuestionType(question) {\n    if (question.options) {\n      return 'multipleChoice';\n    } else if (question.variables) {\n      return 'fillInBlanks';\n    } else if (question.isTrue) {\n      return 'trueFalse';\n    } else {\n      return 'essay';\n    }\n  }\n\n  determineBlanksQuestion(blanks) {\n    if (blanks.description) {\n      var variable = blanks.description.substring(blanks.description.indexOf('['), blanks.description.indexOf(']') + 1);\n      var html = '<input type=\"text\" [(ngModel)]=\"submission[blanks.id]\"/>';\n      var question = '<p>' + blanks.description.replace(variable, html) + '</p>';\n      return question;\n    }\n    else {\n      return '';\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Register</h1>\\n\\n  <input [(ngModel)]=\\\"username\\\" required\\n         placeholder=\\\"username\\\"\\n         class=\\\"form-control mb-2 mt-4\\\"/>\\n  <input [(ngModel)]=\\\"password\\\" required\\n         type=\\\"password\\\"\\n         placeholder=\\\"password\\\"\\n         class=\\\"form-control mb-2\\\"/>\\n  <input [(ngModel)]=\\\"password2\\\" required\\n         type=\\\"password\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control mb-2\\\"/>\\n  <small id=\\\"passwordsDoNotMatch\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.passwordMatchError\\\">\\n    Passwords do not match. Please try again.\\n  </small>\\n  <small id=\\\"usernameTaken\\\" class=\\\"text-danger\\\" [hidden]=\\\"!this.usernameTakenError\\\">\\n    Username has already been taken. Please try a new username.\\n  </small>\\n  <button (click)=\\\"register(username, password, password2)\\\"\\n          class=\\\"btn btn-primary btn-block\\\">\\n    Register\\n  </button>\\n\\n  <a routerLink=\\\"/login\\\">Login</a>\\n  <a routerLink=\\\"/home\\\" class=\\\"ml-2\\\">Home</a>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserServiceClient} from \"../services/user.service.client\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private router: Router,\n              private service: UserServiceClient) { }\n\n  username;\n  password;\n  password2;\n  passwordMatchError:boolean = false;\n  usernameTakenError:boolean = false;\n\n  register(username, password, password2) {\n    if (password !== password2) {\n      this.passwordMatchError = true;\n      return;\n    }\n    this.service\n      .createUser(username, password)\n      .then((response) => {\n        if (response && response.error) {\n          this.usernameTakenError = true;\n        } else {\n          this.usernameTakenError = false;\n          this.router.navigate(['profile']);\n        }\n      });\n\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Add section for course: {{courseId}}</h1>\\n  <input [(ngModel)]=\\\"sectionName\\\"\\n         placeholder=\\\"Section Name\\\"\\n         class=\\\"form-control\\\">\\n  <input [(ngModel)]=\\\"seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n  <button (click)=\\\"createSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n    Add Section\\n  </button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\n\n@Component({\n  selector: 'app-section-list',\n  templateUrl: './section-list.component.html',\n  styleUrls: ['./section-list.component.css']\n})\nexport class SectionListComponent implements OnInit {\n\n  constructor(private service: SectionServiceClient,\n              private route: ActivatedRoute,\n              private router:Router) {\n    this.route.params.subscribe(params => this.setParams(params['courseId']))\n  }\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n\n  setParams(courseId) {\n    this.courseId = courseId;\n  }\n\n  createSection(sectionName, seats) {\n    this\n      .service\n      .createSection(this.courseId, sectionName, seats)\n      .then((section) => {\n        this.router.navigateByUrl('admin/course/'+this.courseId+'/section/'+section._id);\n      });\n  }\n\n  ngOnInit() {\n  }\n\n}\n","export class CourseNavigatorServiceClient {\r\n\r\n  findAllCourses() {\r\n    return fetch('https://web2018-lexikacoyannakis.herokuapp.com/api/course')\r\n      .then(response => response.json());\r\n\r\n  }\r\n\r\n  findAllModulesForCourses(courseId) {\r\n    return fetch('https://web2018-lexikacoyannakis.herokuapp.com/api/course/' + courseId + '/module')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAllSectionsForCourse(courseId) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/course/' + courseId+ '/section')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  removeSection(sectionId) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/section/' + sectionId, {\r\n      method: 'delete',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    });\r\n  }\r\n\r\n  addSection(courseId, section) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/course/'+ courseId + '/section', {\r\n      body: JSON.stringify(section),\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n  }\r\n}\r\n","export class CourseServiceClient {\r\n  COURSE_URL = 'https://web2018-lexikacoyannakis.herokuapp.com/api/course';\r\n\r\n  findAllCourses() {\r\n    return fetch(this.COURSE_URL)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findCourseById(courseId) {\r\n    return fetch(this.COURSE_URL + '/' + courseId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class LessonServiceClient {\r\n  LESSON_URL = 'https://web2018-lexikacoyannakis.herokuapp.com/api/module/';\r\n\r\n  findLessonsForModule(moduleId) {\r\n    return fetch(this.LESSON_URL+ moduleId + '/lesson')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class ModuleServiceClient {\r\n  MODULE_URL = 'https://web2018-lexikacoyannakis.herokuapp.com/api/course/COURSE_ID/module';\r\n  findModulesForCourse(courseId) {\r\n    return fetch(this.MODULE_URL.replace('COURSE_ID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class QuizServiceClient {\r\n\r\n  loadSubmissions(quizId) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/quiz/' + quizId + '/submissions')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  submitQuiz(quiz, quizId) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/quiz/' + quizId,{\r\n      method: 'post',\r\n      body: JSON.stringify(quiz),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n  findQuizById(quizId) {\r\n    return fetch('https://web2018-lexikacoyannakis.herokuapp.com/api/exam/' + quizId)\r\n      .then(response => response.json());\r\n  }\r\n  findAllQuizzesForLesson(lessonId) {\r\n    return fetch('https://web2018-lexikacoyannakis.herokuapp.com/api/lesson/' + lessonId + '/exam')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findAllQuestionsForQuiz(quizId) {\r\n    return fetch('https://web2018-lexikacoyannakis.herokuapp.com/api/exam/' + quizId + '/question')\r\n      .then(response => response.json());\r\n  }\r\n\r\n  findQuizAnswers(quizId, submissionId) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/quiz/' + quizId + '/submission/' + submissionId, {\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n}\r\n","export class SectionServiceClient {\r\n\r\n  SECTION_URL = 'https://node-lexikacoyannakis.herokuapp.com/api/course/COURSEID/section';\r\n  UPDATE_SECTION_URL = 'https://node-lexikacoyannakis.herokuapp.com/api/section/SECTIONID';\r\n\r\n  findSectionsForStudent() {\r\n    const url = 'https://node-lexikacoyannakis.herokuapp.com/api/student/section';\r\n    return fetch(url, {\r\n      credentials: 'include'\r\n    })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  enrollStudentInSection(sectionId) {\r\n    const url = 'https://node-lexikacoyannakis.herokuapp.com/api/section/' + sectionId + '/enrollment';\r\n    return fetch(url, {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  findSectionsForCourse(courseId) {\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId))\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createSection(courseId, name, seats) {\r\n    const section = {courseId, name, seats};\r\n    return fetch(this.SECTION_URL.replace('COURSEID', courseId), {\r\n      method: 'post',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  updateSection(sectionId, courseId, name, seats) {\r\n    const section = {sectionId, courseId, name, seats};\r\n    return fetch(this.UPDATE_SECTION_URL.replace('SECTIONID', sectionId), {\r\n      method: 'put',\r\n      body: JSON.stringify(section),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => response.json());\r\n  }\r\n\r\n  findSectionInfo(sectionId) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/section/' + sectionId)\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","export class UserServiceClient {\r\n\r\n  findUserById(userId) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/user/' + userId)\r\n      .then(response => response.json());\r\n  }\r\n\r\n  login(username, password) {\r\n    const credentials = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/login', {\r\n      method: 'post',\r\n      body: JSON.stringify(credentials),\r\n      credentials: 'include',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response != null) {\r\n        return response.json()\r\n      }else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/logout', {\r\n      method: 'post',\r\n      credentials: 'include'\r\n    });\r\n  }\r\n\r\n  profile() {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/profile',\r\n      {\r\n        credentials: 'include', // include, same-origin, *omit\r\n      })\r\n      .then(response => response.json());\r\n  }\r\n\r\n  createUser(username, password) {\r\n    const user = {\r\n      username: username,\r\n      password: password\r\n    };\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/register', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include', // include, same-origin, *omit\r\n      method: 'post',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      if (response != null) {\r\n        return response.json()\r\n      }else {\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  updateUser(user) {\r\n    return fetch('https://node-lexikacoyannakis.herokuapp.com/api/profile', {\r\n      body: JSON.stringify(user),\r\n      credentials: 'include',\r\n      method: 'put',\r\n      headers:{\r\n        'content-type': 'application/json'\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    });\r\n  }\r\n}\r\n","export class WidgetServiceClient {\r\n  findWidgetsForLesson(lessonId) {\r\n    return fetch('https://web2018-lexikacoyannakis.herokuapp.com/api/lesson/' + lessonId + '/widget')\r\n      .then(response => response.json());\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>Sections for course: {{courseId}}</h1>\\n  <input [(ngModel)]=\\\"sectionName\\\"\\n         placeholder=\\\"Section Name\\\"\\n         class=\\\"form-control\\\">\\n  <input [(ngModel)]=\\\"seats\\\"\\n         placeholder=\\\"Seats available\\\"\\n         class=\\\"form-control\\\">\\n  <button (click)=\\\"updateSection(sectionName, seats)\\\" class=\\\"btn btn-success btn-block\\\">\\n    Update Section\\n  </button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SectionServiceClient} from \"../services/section.service.client\";\n\n@Component({\n  selector: 'app-update-section-list',\n  templateUrl: './update-section-list.component.html',\n  styleUrls: ['./update-section-list.component.css']\n})\nexport class UpdateSectionListComponent implements OnInit {\n\n\n  sectionName = '';\n  seats = '';\n  courseId = '';\n  sectionId = '';\n\n  constructor(private service: SectionServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.loadSectionInfo(params['courseId'], params['sectionId']))\n  }\n\n\n  ngOnInit() {\n  }\n\n\n  loadSectionInfo(courseId, sectionId) {\n    this.courseId = courseId;\n    this.sectionId = sectionId;\n    this\n      .service\n      .findSectionInfo(sectionId)\n      .then(section => {\n        this.sectionName = section.name;\n        this.seats = section.seats;\n      });\n  }\n\n  updateSection(sectionName, seats) {\n    this.service.updateSection(this.sectionId, this.courseId, sectionName, seats)\n      .then(() => this.loadSectionInfo(this.courseId, this.sectionId));\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <h1>\\r\\n    White Board\\r\\n  </h1>\\r\\n\\r\\n  <a routerLink=\\\"/login\\\">Login</a>\\r\\n  <a routerLink=\\\"/register\\\" class=\\\"ml-2\\\">Register</a>\\r\\n  <app-enroll-list></app-enroll-list>\\r\\n  <app-course-grid></app-course-grid>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-white-board',\n  templateUrl: './white-board.component.html',\n  styleUrls: ['./white-board.component.css']\n})\nexport class WhiteBoardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"widgets && widgets.length > 0; else noWidgets\\\">\\n  <div *ngFor=\\\"let widget of widgets\\\" class=\\\"m-4\\\">\\n    <div [ngSwitch]=\\\"widget.widgetType\\\">\\n      <div *ngSwitchCase=\\\"'Heading'\\\">\\n        <div [ngSwitch]=\\\"widget.size\\\">\\n          <h1 *ngSwitchCase=\\\"'1'\\\">{{widget.text}}</h1>\\n          <h2 *ngSwitchCase=\\\"'2'\\\">{{widget.text}}</h2>\\n          <h3 *ngSwitchCase=\\\"'3'\\\">{{widget.text}}</h3>\\n          <h4 *ngSwitchCase=\\\"'4'\\\">{{widget.text}}</h4>\\n          <h5 *ngSwitchCase=\\\"'5'\\\">{{widget.text}}</h5>\\n          <h6 *ngSwitchCase=\\\"'6'\\\">{{widget.text}}</h6>\\n        </div>\\n      </div>\\n      <div *ngSwitchCase=\\\"'Link'\\\">\\n        <a href=\\\"{{widget.href}}\\\">{{widget.text}}</a>\\n      </div>\\n      <div *ngSwitchCase=\\\"'Image'\\\">\\n        <img src=\\\"{{widget.src}}\\\" >\\n      </div>\\n      <div *ngSwitchCase=\\\"'Paragraph'\\\">\\n        <p>{{widget.text}}</p>\\n      </div>\\n      <div *ngSwitchCase=\\\"'List'\\\">\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item\\\"\\n              *ngFor=\\\"let item of widget.listItems.split('\\\\n')\\\">\\n            {{item}}\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<ng-template #noWidgets>\\n  No widgets are available for this lesson.\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {WidgetServiceClient} from \"../services/widget.service.client\";\n\n@Component({\n  selector: 'app-widget-list',\n  templateUrl: './widget-list.component.html',\n  styleUrls: ['./widget-list.component.css']\n})\nexport class WidgetListComponent implements OnInit {\n\n  constructor(private service: WidgetServiceClient,\n              private route: ActivatedRoute) {\n    this.route.params.subscribe(params => this.setContext(params));\n  }\n\n  context;\n  widgets = [];\n\n  setContext(params) {\n    this.context = params;\n    if (params.lessonId) {\n      this.loadWidgets(params.lessonId);\n    }\n  }\n\n  loadWidgets(lessonId) {\n    this.service.findWidgetsForLesson(lessonId)\n      .then(widgets => this.widgets = widgets);\n    console.log(this.widgets);\n  }\n\n  ngOnInit() {\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}